language: minimal

branches:
  only:
    - main


before_install:
  # Decrypt the git_deploy_key.enc key into /tmp/git_deploy_key
  - openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv -in deploy_rsa.enc -out /tmp/git_deploy_key -d
  # Make sure only the current user can read the private key
  - chmod 600 /tmp/git_deploy_key
  # Create a script to return the passphrase environment variable to ssh-add
  - echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
  # Start the authentication agent
  - eval "$(ssh-agent -s)"
  # Add the key to the authentication agent
  - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null

install:
  - docker --version  # document the version travis is using

before_deploy:
  # Set up git user name and tag this commit
  - git config --local user.name "jrusbjerg"
  - git config --local user.email "jkrusbjerg@gmail.com"
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
  - git tag $TRAVIS_TAG

stages:
  - docker_build
  - deploytodo
  - deploy

jobs:
  include:
  - stage: docker_build
    name: "build and push docker"
    if: branch = "mainx"
    script:
      - echo "LOGIN"
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PSW
      - echo "BUILD"
      - docker build -t jrusbjerg/twitbackend -f Minitwit_BE/Minitwit_BE.Api/Dockerfile Minitwit_BE/.
      - echo "PUSH"
      - docker push jrusbjerg/twitbackend:latest
        
  - stage: deploytodo
    name: "deploy new version"
    if: branch = "mainx"
    install: skip
    # -o flag to get around "add ip to known hosts prompt"
    script: |
      ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
      "docker-compose down && \
      docker-compose pull && \
      docker-compose up -d " 
    
  - stage: deploy
    provider: releases
    api_key:
      secure: ${git_token}
    file: "FILE TO UPLOAD"
    skip_cleanup: true
    on:
      tags: true


