language: csharp
mono: none
dotnet: 6.0

addons:
  sonarcloud:
    organization: "jesperrusbjerg"
    token:
     secure: $SONAR_TOKEN
before_script:
- dotnet restore ".\Minitwit_BE\Minitwit_BE.sln"

script:
- dotnet build ".\Minitwit_BE\Minitwit_BE.sln" -c Release 
#- dotnet test ".\CalculatorCLI\CalculatorCLI.sln" -c Release -v n

branches:
  only:
  - main

before_install:
- openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv
  -in deploy_rsa.enc -out /tmp/git_deploy_key -d
- chmod 600 /tmp/git_deploy_key
- echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
- eval "$(ssh-agent -s)"
- DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null

install:
- docker --version

stages:
- docker_build
- deploy

jobs:
  include:
  - stage: docker_build
    name: build and push docker
    if: branch = "main"
    script:
    - echo "LOGIN"
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PSW
    - echo "BUILD"
    - docker build -t jrusbjerg/twitbackend -f Minitwit_BE/Minitwit_BE.Api/Dockerfile
      Minitwit_BE/.
    - echo "PUSH"
    - docker push jrusbjerg/twitbackend:latest
  - stage: deploy
    name: deploy new version
    if: branch = "main"
    install: skip
    script: "ssh -o \"StrictHostKeyChecking no\" ${MT_USER}@${MT_SERVER} \\\n\"docker-compose
      down && \\\ndocker-compose pull && \\\ndocker-compose rm -f && \\\ndocker-compose
      up -d && \\\nexit \" \n"
